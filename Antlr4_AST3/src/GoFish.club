Setup
{
    Player.create(2);
    deck.shuffle();
    deck.deal(7);
}
Round
{
    int t = 1;
    int trick = 0;
    bool turnAgain = false;

    while ( deck.size()>0 || Player.getPlayer(1).handSize()>0 || Player.getPlayer(2).handSize()>0 ) {
        Turn(Player.getPlayer(t));
        if ( t == 1 && ! turnAgain ) {
            t = 2;
            turnAgain = true;
        }
        if ( t == 2 && ! turnAgain ) {
            t = 1;
            turnAgain = true;
        }
    }

    if ( Player.getPlayer(1).score > Player.getPlayer(2).score ) { Game.exit(Player.getPlayer(1)); }
    if ( Player.getPlayer(1).score < Player.getPlayer(2).score ) { Game.exit(Player.getPlayer(2)); }

}
Turn ( Player player ) {
    bool found = false;
    bool check = false;
    turnAgain = false;
    trick = 0;
    string card = "";
    string whenReady = player.name+"'s turn. Press ENTER when ready!";
    string tryAgain = "";
    string tryAgainTwo = "";
    Game.print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
    string start = Game.input(whenReady);
    if ( player.handSize() == 0 && deck.size() > 0 ) {
        player.draw(1,deck);
        Game.print("Your hand is empty. You drew a card!");
    }
    player.printHand();
    if ( player.handSize() > 0 ) {
        card = Game.input("What card will you ask for? ");
        for ( int c = 0; c < player.handSize(); c++) {
            if ( player.getCardIndex(c).rank # card ) {
                check = true;
            }
        }
        while ( ! check ) {
            tryAgain = "You do not have any " + card;
            tryAgainTwo = tryAgain + "'s. Try again: ";
            card = Game.input(tryAgainTwo);
            for ( int d = 0; d < player.handSize(); d++) {
                if ( player.getCardIndex(d).rank # card ) {
                    check = true;
                }
            }
        }
    }
    
    if ( player.name # Player.getPlayer(1).name && player.handSize() > 0 ) {
        for ( int i = Player.getPlayer(2).handSize(); i > 0; i-- ) {
            if ( Player.getPlayer(2).getCardIndex(i-1).rank # card ) {
                player.takeCard(Player.getPlayer(2).getCardIndex(i-1).id,Player.getPlayer(2));
                found = true;
                turnAgain = true;
                Game.print("You found a "+card+"!");
            }
        }

    }
    if ( player.name # Player.getPlayer(2).name && player.handSize() > 0 ) {
        for ( int j = Player.getPlayer(1).handSize(); j > 0; j-- ) {
            if ( Player.getPlayer(1).getCardIndex(j-1).rank # card ) {
                player.takeCard(Player.getPlayer(1).getCardIndex(j-1).id,Player.getPlayer(1));
                found = true;
                turnAgain = true;
                Game.print("You found a "+card+"!");
            }
        }

    }
    for ( int k = 0; k < player.handSize(); k++ ) {
        if ( player.getCardIndex(k).rank # card ) {
            trick = trick + 1;
        }
    }
    if ( trick == 4 ) {
         player.score++;
         for ( int u = player.handSize(); u > 0; u-- ) {
            if ( player.getCardIndex(u-1).rank # card ) {
                player.discard(player.getCardIndex(u-1).id,Game.discardPile);
            }
         }

         Game.print("You got a trick of "+card+"'s!");


    }

    if ( ! found ) {
        Game.print("You did not find any "+card+"'s.");
        turnAgain = false;
    }
    if ( found )  {
        Game.print("It is your turn again!");
    }

    if ( player.handSize() == 0 || ! turnAgain ) {
        if ( deck.size() == 0) {
            Game.print("The deck is empty. Your turn is now over.\n\n");
        }
        if ( deck.size() > 0) {
             player.draw(1,deck);
             int size = player.handSize();
             string drawn = player.getCardIndex(size-1).rank;
             trick = 0;
             for ( int q = 0; q < player.handSize(); q++ ) {
                 if ( player.getCardIndex(q).rank # drawn ) {
                     trick = trick + 1;
                 }
             }
             if ( trick == 4 ) {
                 player.score++;
                 for ( int n = player.handSize(); n > 0; n-- ) {
                     if ( player.getCardIndex(n-1).rank # drawn ) {
                         player.discard(player.getCardIndex(n-1).id,Game.discardPile);
                     }

                }
                Game.print("You got a trick of "+drawn+"'s!");
             }
             Game.print("You drew a card. Your turn is now over.\n\n");
        }
    }

}